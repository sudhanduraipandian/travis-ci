language: node_js

os:
  - linux
  - osx
  - windows

node_js:
- '8'
- '9'
- '10'

services:
  - docker

cache:
  directories:
    - node_modules

before_install:
  - > 
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      # docker pull aliyunfc/runtime-python2.7:build-1.5.2
      # docker pull aliyunfc/runtime-python3.6:build-1.5.2
      docker pull bitnami/minideb:jessie
    fi
  # install make for windows
  - > 
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      choco install make
    fi

install: 
  # Re-checkout files preserving line feeds. This prevents Windows builds from
  # converting \n to \r\n.
  # see https://github.com/google/wire/blob/master/.travis.yml#L37
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cd ../..;
      mv $TRAVIS_REPO_SLUG _old;
      git config --global core.autocrlf false;
      git clone _old $TRAVIS_REPO_SLUG;
      cd $TRAVIS_REPO_SLUG;
    fi
  - npm install

before_script: 
  - env | sort
  - make validate-lint

script: 
  - |
    if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
      mocha ./test/ -t 20000  -R spec --recursive -name *.test.js --grep '^(?!Integration::).*'
    else
      make test
    fi

deploy:
  provider: npm
  email: duwan@live.com
  api_key:
    secure: UJ7hrwXNo/nEDdvtEfwuX7s1lR0vW1Nd9tq4AmeIxG3KtKBAyglfvh/lPKN5eiO4M9Xga2mLNumNgzk6htZc6zUmKBS/uyDP/BfZFZJDkjfUdDl6l5JtLfSXaWBUSHGM2HoqMXoMrQ0RweT565G4hNDSZ/9vt6DjzCp+twOsKeQWqptcTQxgVk19ynz1Ve0dll/ViIxM04R5vWD9ISI6mHjK1lhcrzsw/HMDimzbOoAtyDSWTwconnv23tY5xCgaTSc4Ltvvlq6pQ9Mtt0mHTkFj+q3B16GeqTiHPjk1MVnPBii9Y/MgdeLkz5RDLggTD5/UzhEtqj8O+dTght4O4uRb7pqLCxVzi5atETvSim+Phsc3y159lQmqmcU/bNXl54C1ro44eBlS1jC8gTrK+c5eBAhju2AOBuoMfmNWHc+sXJLxwaW/o+3alsPeTvpYBlJnU2/LpEpWGohjEUAItyMHtp5nhBXCSf3iQAEXN02fRzj8L+fydTPRFzFnNlGB/qZNGxVIjR9JIaUL8a/DjE5Sjt6OXnNofP7CGMZxSStHVyobo0D36gW/4hRR9kymunvdOoKLmk+E1/0A6vutjOf3ajIdDvr9cfEgHFp9X3cl38WHBwNiQOlJxlE+AooMHgtCiO3+ZFcTsae/EJS3p4KOh+Fx+uBEg3aXT6gqa3Y=
  on:
    tags: true
    repo: aliyun/fun
    condition: $TRAVIS_TAG = "v$PKG_VERSION"
  before_deploy:
    - export PKG_VERSION=`node -p "require('./package').version"`