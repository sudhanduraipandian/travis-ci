before_install:
# Gets commit message
- "export TRAVIS_COMMIT_MSG=\"$(git log --format=%B --no-merges -n 1)\""
- echo "$TRAVIS_COMMIT_MSG"
# Check if commit message contains label [skip travis] and exit if any
# [skip ci] label is standard for AppVeyor so there should be another one that deos not exists https://github.com/travis-ci/travis-ci/issues/5032
- if [[ "${TRAVIS_COMMIT_MSG,,}" == *"[skip travis]"* ]]; then echo "SETUP Commit message contains [skip travis], skipping the build" && exit; else echo "SETUP No skipping commit message labels found [skip travis], countinue building"; fi
# Check if commit message contains labels [skip travis client] or [skip ci client] to skip client tests
- if [ -z ${SKIP_CLIENT_TESTS+x} ]; then echo "SETUP SKIP_CLIENT_TESTS is unset"; else echo "SETUP SKIP_CLIENT_TESTS is set to '$SKIP_CLIENT_TESTS'"; fi
- if [[ -z ${SKIP_CLIENT_TESTS+x} && "${TRAVIS_COMMIT_MSG,,}" == *"[skip travis client]"* ]]; then echo "SETUP Commit message contains [skip travis client]"; export SKIP_CLIENT_TESTS=true; fi
- if [[ -z ${SKIP_CLIENT_TESTS+x} && "${TRAVIS_COMMIT_MSG,,}" == *"[skip ci client]"* ]]; then echo "SETUP Commit message contains [skip ci client]"; export SKIP_CLIENT_TESTS=true; fi
- if [ ! "$SKIP_CLIENT_TESTS" == "true" ]; then echo "SETUP Will run client tests"; else echo "SETUP Will not run client tests as either the skipping labels found ([skip travis client], [skip ci client]) or set SKIP_CLIENT_TESTS=true"; fi
# Check if commit message contains labels [skip travis server] or [skip ci server] to skip server tests
- if [ -z ${SKIP_SERVER_TESTS+x} ]; then echo "SETUP SKIP_SERVER_TESTS is unset"; else echo "SETUP SKIP_SERVER_TESTS is set to '$SKIP_SERVER_TESTS'"; fi
- if [[ -z ${SKIP_SERVER_TESTS+x} && "${TRAVIS_COMMIT_MSG,,}" == *"[skip travis server]"* ]]; then echo "SETUP Commit message contains [skip travis server]"; export SKIP_SERVER_TESTS=true; fi
- if [[ -z ${SKIP_SERVER_TESTS+x} && "${TRAVIS_COMMIT_MSG,,}" == *"[skip ci server]"* ]]; then echo "SETUP Commit message contains [skip ci server]"; export SKIP_SERVER_TESTS=true; fi
- if [ ! "$SKIP_SERVER_TESTS" == "true" ]; then echo "SETUP Will run server tests"; else echo "SETUP Will not run server tests as either the skipping labels found ([skip travis server], [skip ci server]) or set SKIP_SERVER_TESTS=true"; fi

- echo "Mono build currently does not work for us https://github.com/travis-ci/travis-ci/issues/7374";
- echo  "Set the environment to skip xbuild and server tests";
- export SKIP_SERVER_TESTS=true;
- export SKIP_XBUILD=true;


# Below is a fix to for `package requires NuGet client version '3.0' or above, but the current NuGet version is '2.12.0.0'.`
# according to https://github.com/travis-ci/travis-ci/issues/5932
# We skip downloading and restoring latest nuget.exe as we have it in our solution
# - mkdir -p .nuget
# - wget -O .nuget/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
# - cd $TRAVIS_BUILD_DIR
# The line below starts failing in travis-build version: 5ddd724fb Issue logged - https://github.com/travis-ci/travis-ci/issues/6854
# - mono .nuget/nuget.exe
install:
# Mono build currently does not work for us https://github.com/travis-ci/travis-ci/issues/7374
# - mono .nuget/nuget.exe restore Bridge.sln -Verbosity detailed
env:
  global:
  - secure: h8UC6JsnMa9bwGP7/efFsJUVwmz8OqUZy37LIL/J5rkjHtzzEexRDi4gSEOkp3EgqNOupDd7PpWBJGkDhr/5sSB+3NkEh/4DeHNdHWYWEZzpmTZQuRggk8RSNohw8TIXOLh4wqm0PIEIKzBjYYInJvU9rWVHvdD7QvJu6nYOwNxKtnXTGhEeWma5fFA3Kge/aIMyMB5pxEoT6NjWBwwEzb6OZEi6bgbIQk6SMvGe/UcZ4X0oYcjKaUuR2hHfZnAkeUkFFqmo+yJl2PihJVggmnpwRA/RYyg0Amg+AbF1/LvlBtAau6e75+O284a2TNY3kHjq6E6dB0ZHjwFGmWHaVb773c4DZCvZpxZinTXSM5MAa2UG/BDYI7vmyyLaHkIcyghve3Jm2ub1+UPqkVymbUtOGfvl80B8KCRxaMPLTDwajY3piIPnUY41y6hoYqP94P6N6XxExcj/2kjl2cg0JCFEZrG/HBf28gFgzlTL2HidanAQdh/ns7uWv+o3LqsI/TF+JD/Una4juNiT7I1vHEmHfVH6TEDXauf7bisO5p7jcX+yWllWIRu7kKlT7afHaQzk8GlXu7glKoMyGGwJ71exPvRUqACRe+gCDT7I6/AbM4ozxHj5AGLzoQVE8wZViFaLRv1h6kTFSx3jtlKKM6DsdHq6yyG5FusQbs9P3kE=
  - secure: j3IhmT3tW1GqNVY8UuZK/1O4RbVI6Me++vSSkOcR6aJTTTWPoLmWX440ZVDwdeiWJor4Rx/gAVfE2K1ZSegRvcPe0eyKV6/P1cDpss28LXUN/rqDDWizzF/Oq8su/vCV7ZC9AXqXLBK+Z0EqCq/N2CQbFORxyvV/xd2KkCe3IhkEVaCz/1uzfJfTg4IWkBBqxhyFWvgXAi8MCvSjf/QqagF2GW3D3pL39pIKMCEP2OXaOWKfX/2EpkPXm2GB1OEM+ZmN67s1D8dhCEUyFk4B9qtGcz3cSPnTqjLte28jKVVUOWmsFsklvNf6htYlWI+oYo1Cvm6ODrvs9uywdmMEgEaiZGXDX1V3fiyR/lurx7t5cVcpHSWKzqOf4wJI6XPIKKiNpbBflhEnXbgyLgZBA6p3otsDXk1MmKp7rHoCIP2nLhqNQaPelC3JwyHgeiHIHQfTUCJGkXTgmfCmUSz1CJpDA9nBhzWBfWMSqUpJBKceU95PA5JMa3tYY35+r3nTNOPbSnNQQ2L3MD/gZelcZVkv/l46qLqV4InVjrUDE7+AlmhJCGvgvPp1J1Fh8i0zoXJH4O/QLI6Bk3nZbyeWlTy33fvsdFAP9xqUBt3svM5/JnDkvOMF11Mr0qOpcreb0UoiSO/JQAnaDdENTBV9M+gmADGPEIEeB63Z0/l2mgM=
language: node_js
node_js:
  - "4"
solution: Bridge.sln
before_script:
- if [ ! "$SKIP_CLIENT_TESTS" == "true" ]; then cd $TRAVIS_BUILD_DIR/.build/ci; npm install; fi
# - if [ ! "$SKIP_CLIENT_TESTS" == "true" ]; then npm install -g grunt-cli; fi
script:
- if [[ ! "$SKIP_XBUILD" == "true" ]]; then cd $TRAVIS_BUILD_DIR; xbuild /p:Configuration=Release Bridge.sln; else echo "Skipping XBuild as SKIP_XBUILD"; fi
- if [[ ! "$SKIP_SERVER_TESTS" == "true" && $TRAVIS_TEST_RESULT = 0 ]]; then cd $TRAVIS_BUILD_DIR; mono ./packages/NUnit.ConsoleRunner.*/tools/nunit*-console.exe ./Compiler/TranslatorTests/bin/Release/Bridge.Translator.Tests.dll; else echo "Skipping NUnit tests as SKIP_SERVER_TESTS or build failed"; fi
- if [[ ! "$SKIP_CLIENT_TESTS" == "true" && ($TRAVIS_TEST_RESULT = 0 || "$SKIP_XBUILD" == "true")]]; then cd $TRAVIS_BUILD_DIR/.build/ci; cp -rf $TRAVIS_BUILD_DIR/Tests/Runner/* $TRAVIS_BUILD_DIR/.build/ci; npm test; else echo "Skipping sauce tests as SKIP_CLIENT_TESTS or build failed"; fi
cache:
  directories:
  - packages
notifications:
  slack:
    secure: Gs/hlDNJYnOk35VqX/VNOKxvj8IyDG2R45rnqLaOb1DMa5DHRa7zkzi4fPCFenPYUFWWKPBfH9OmF75AESoqn9lCMIG2u7r2wTh25G2kBryDpXVd4r+XzWuAQYvJ48HHX7S2+yRVO96ZoPCf0ObFxG8Wq9nF80Hl+CiveKkAXcSznOrDqkCFAXXuq3919PTaxqWdvVSWTKhlD7i8PclBjKciow/O9ie6pwW+PzgNnrhQuHBqWJwauyAEhHZt/AyT1jrBweX9+IGjncE4S25qSQryLBbbCVdNQOZLdYFzn53OgtdSHsFfFYeZceH5epoGYJiMDxXUg+CrbmO5DUQa7HRAYwAMU7XmH1Xu8M+SUi1PctLgqXm0P7qZ5e+xYMQYZipX7xYykyWBPnpMahG9mA09UJ1ezVQHCAzV585qdZ/HZJxGK+3DUzIDpuXJiHpML7fkfx4GZzqTiYLctZEx8oZOsOErOFVJI08nlm3IFg3KTagrPUw5hFHJRWVF3IwhnZ/N28zEMufD+/cTCK6tXcu08KZgY3qGivgi4lHHkXEbkt/ubaH9Kf6GlNjvCDmMELpAm2pDf+3gJTF8MPWmNy6QfkZ2xK9qQWJjui+c8FZOypgEOCUw9ErzFCVxGjHgNwuXn5dcH8JJLYGUoVEf9XM/glyd2M5oxGjl+ITHEcQ=
