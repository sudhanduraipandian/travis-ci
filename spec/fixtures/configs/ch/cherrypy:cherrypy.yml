conditions: v1

language: python
os: linux
dist: trusty
sudo: false
services:
- memcached
_base_envs:
- &stage_lint
  stage: &stage_lint_name lint
- &stage_test
  stage: &stage_test_name test
- &stage_test_priority
  stage: &stage_test_priority_name test against latest Python versions first (under GNU/Linux)
- &stage_test_osx
  stage: &stage_test_osx_name test under OS X (last chance to fail before deploy available)
- &stage_deploy
  stage: &stage_deploy_name upload new version of python package to PYPI (only for tagged commits)
- _conditions:
  - &condition_api_or_cron
    if: type IN (api, cron)
- &no_memcached
  services: []
- &pyenv_base
  <<: *stage_test
  language: generic
  env:
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - &ensure_pyenv_installed |
    if [ ! -f "$PYENV_ROOT/bin/pyenv" ]
    then
      rm -rf "$PYENV_ROOT"
      curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
    fi
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    pyenv update
  - &install_python pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - &switch_python pyenv shell "$PYTHON_VERSION"
  - &python_version python --version
- &osx_python_base
  <<: *pyenv_base
  <<: *stage_test_osx
  os: osx
  language: generic
  before_install:
  - brew update
  - brew install pyenv || brew upgrade pyenv
  - &ensure_pyenv_preloaded |
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
  - *install_python
  - *switch_python
  - *python_version
  before_cache:
  - brew --cache
  script:
  - travis_retry python -m tox
- &python_3_7_mixture
  python: &mainstream_python 3.7
  dist: xenial
  group:
  sudo: true
- &pure_python_base
  <<: *stage_test
  <<: *python_3_7_mixture
- &pure_python_base_priority
  <<: *pure_python_base
  <<: *stage_test_priority
- &lint_python_base
  <<: *stage_lint
  <<: *no_memcached
  python: 3.6
  after_failure: skip
python:
- 3.5
- 3.7-dev
- &pypy3 pypy3.5-5.10.0
jobs:
  fast_finish: true
  allow_failures:
  # TODO: fix tests
  - python: *pypy3
  - env: TOXENV=pre-commit-pep257
  include:
  - <<: *lint_python_base
    env: TOXENV=pre-commit
  - <<: *lint_python_base
    env: TOXENV=pre-commit-pep257
  - <<: *lint_python_base
    env: TOXENV=dist-check
  - <<: *lint_python_base
    env: TOXENV=setup-check
  - <<: *pure_python_base_priority
    # mainstream here (3.7)
  - <<: *pure_python_base_priority
    # mainstream here (3.7)
    # run tests against the bleeding-edge cheroot
    env: TOXENV=cheroot-master
  - <<: *pure_python_base_priority
    python: nightly
  - <<: *osx_python_base
    python: 3.5
    env:
    - PYTHON_VERSION=3.5.5
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: *mainstream_python
    env:
    - PYTHON_VERSION=3.6.5
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.7-dev
    env:
    - PYTHON_VERSION=3.7-dev
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    # mainstream here (3.7)
    python: *mainstream_python
    env:
    - PYTHON_VERSION=3.7.0
    # run tests against the bleeding-edge cheroot
    - TOXENV=cheroot-master
    - *env_pyenv
    - *env_path
  - <<: *stage_deploy
    <<: *python_3_7_mixture
    <<: *no_memcached
    install: skip
    script: skip
    deploy:
      provider: pypi
      skip_cleanup: true
      on:
        tags: true
        all_branches: true
        python: *mainstream_python
      user: jaraco
      distributions: dists
      password:
        secure: CQqUvtssQ4wmRluPcxh6m5lIXi83Qu9dAFAvZLS/+AQNIG78XECXv5xFTEdGSLX9yncKDpDKI3xRJeCKyO4OJUN0t6W1MRycY72+R63i9e9wPjfvtRqYH1TBT+no7jj/DHqXIrWSlpjRNAt4XXeSv7OzKWT4PmTNkNQSKyS1DWCmZGlbCKlV774Z9PbrfltflxL0V6DiX6ZfoY1THBO4rIopjMk/MPLgS5zvwLgXVbT9sK/DcPOgOq47iSLCs0oScbwiFzYW4DbcVZrBMv4ALtQTjk6ZEaBQ7KtKgsyxgi/ToVhjRxYg4rwvhjsyjixUdECLUqL3WgWfzW/lo82lhb79ERwhnjf1DvPNexlXhv9hHwHsFROpaOmM0nyDJsJg0rCNPVfO4SpBHEnd/ujlHO6yorHj0S54jZWqqDwD5gN19v3hEMT48Pc8uvazE9K1kMQbNXEzqn+SJjVB+DG7qK5Jm9Kk7ZC4R88hJAJNsR+SlFCXMGzkS9WUefUGLHQFfezZk43sMPIXMnh9d2XqCQo4QpUawdg3pwaTukFfyaHlK39CIHhZNas5D/UFL5spQPAAkH1IMcPILiSUwYYnXIJFWJIiulfEQalJroAQjrzvst/NVB8BbeYuCfmVLVOZw8Y6GOYONGgiXjT3nfmw/dN+uw+GY3EgAV5jl+fa434=
cache:
  pip: true
  directories:
  - $HOME/.cache/pre-commit
  - $HOME/Library/Caches/Homebrew
install:
- python -m pip install tox "setuptools>=28.2"
- python -m tox --notest  # Pre-populate a virtualenv with dependencies
script:
- python -m tox
after_failure:
- echo "Here's a list of installed Python packages:"
- pip list --format=columns
- echo Dumping logs, because tests failed to succeed
- |
    for log in `ls cherrypy/test/*.log`
    do
      echo Outputting $log
      cat $log
    done
- py_log=/home/travis/build/cherrypy/cherrypy/.tox/python/log/python-0.log
- echo Outputting python invocation log from $py_log
- cat $py_log
stages:
- *stage_lint_name
- *stage_test_priority_name
- name: *stage_test_name
  <<: *condition_api_or_cron
- name: *stage_test_osx_name
  <<: *condition_api_or_cron
- name: *stage_deploy_name
  if: tag IS present
