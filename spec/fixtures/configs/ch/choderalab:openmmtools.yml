language: c
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test

install:
  - bash -x devtools/travis-ci/install.sh
  - export PYTHONUNBUFFERED=true
  - export PATH=$HOME/miniconda/bin:$PATH

script:
  # Create a test environment
  - conda create --quiet --yes -n test python=$python
  # Activate the test environment
  - source activate test
  # Add org channel
  - conda config --add channels ${ORGNAME}
  # Add omnia dev channels
  - if [ $DEVOMNIA ]; then conda config --add channels omnia-dev; fi
  # Add conda-forge channel back to top priority
  - conda config --add channels conda-forge
  # Build the recipe
  - conda build devtools/conda-recipe
  # Install the package
  - conda install --yes --quiet --use-local ${PACKAGENAME}-dev
  # Install testing dependencies. Without specifying the numpy version, numpy
  # is downgraded to 1.9 and we get a "libgfortran not found" issue.
  - conda install --yes --quiet nose nose-timer pymbar "numpy>=1.14"
  # Test the package
  - cd devtools && nosetests $PACKAGENAME --nocapture --verbosity=2 --with-timer --with-doctest -a '!slow' && cd ..

env:
  matrix:
    - python=3.6 CONDA_PY=36
    - python=3.7 CONDA_PY=37
    - python=3.7 CONDA_PY=37 DEVOMNIA=true # allowed to fail
  global:
    - ORGNAME="omnia" # the name of the organization
    - PACKAGENAME="openmmtools" # the name of your package
    - OPENMM_CPU_THREADS="1" # only use one CPU thread for determinism

matrix:
  allow_failures:
  - env: python=3.7 CONDA_PY=37 DEVOMNIA=true
