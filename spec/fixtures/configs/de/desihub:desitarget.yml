#
# IMPORTANT.  OS X support is so experimental that you have to specifically
# request to have it enabled, on a per-repository basis.  See
# http://docs.travis-ci.com/user/multi-os/#Manual-intervention-required
#
# This file will still work, without OS X enabled, it just won't run those
# tests.
#
# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
# language: python
language: c

os:
    - linux
    # - osx

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Use Ubuntu 14.04 LTS "trusty" instead of default 12.04
dist: trusty

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng
# python:
    # - 2.6 NOTE: no longer testing python 2.x
    # - 2.7
    # - 3.3
    # - 3.4
    # This is just for "egg_info".  All other builds are explicitly given in the matrix
env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        # BAW 2018-11-06:  This is the numpy version we have at NERSC.
        - NUMPY_VERSION=1.13.3
        # - SCIPY_VERSION=0.17
        - ASTROPY_VERSION=2.0.9
        # - SPHINX_VERSION=1.6.6
        - DESIUTIL_VERSION=1.9.14
        # - SPECLITE_VERSION=0.7
        - SPECLITE_VERSION=v0.8
        - DESISPEC_VERSION=0.18.0
        - DESISIM_VERSION=0.31.1
        - DESIMODEL_VERSION=0.9.2
        - DESIMODEL_DATA=branches/test-0.9
        # - DESIMODEL_DATA=trunk
        - MAIN_CMD='python setup.py'
        # Additional conda channels to use.
        - CONDA_CHANNELS="astropy"
        # These packages will always be installed.
        - CONDA_DEPENDENCIES=""
        # These packages will only be installed if we really need them.
        - CONDA_ALL_DEPENDENCIES="scipy matplotlib=2.1.2 scikit-learn h5py coverage pyyaml photutils basemap=1.0.7"
        # These packages will always be installed.
        - PIP_DEPENDENCIES=""
        # These packages will only be installed if we really need them.
        # - PIP_ALL_DEPENDENCIES="speclite==${SPECLITE_VERSION} coveralls fitsio"
        - PIP_ALL_DEPENDENCIES="coveralls fitsio"
        # These pip packages need to be installed in a certain order, so we
        # do that separately from the astropy/ci-helpers scripts.
        - DESIHUB_PIP_DEPENDENCIES="desiutil=${DESIUTIL_VERSION} desispec=${DESISPEC_VERSION} desisim=${DESISIM_VERSION} desimodel=${DESIMODEL_VERSION}"
        # Debug the Travis install process.
        - DEBUG=False
    matrix:
       # - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
       # - PYTHON_VERSION=2.7 SETUP_CMD='bdist_egg'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='bdist_egg'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='bdist_egg'

matrix:
    # Don't wait for allowed failures.
    fast_finish: true

    # OS X support is still experimental, so don't penalize failures.
    allow_failures:
        - os: osx
        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='test'
               ASTROPY_VERSION=3.0
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES
        - os: linux
          python: 3.5
          env: MAIN_CMD='pycodestyle' SETUP_CMD='--count py/desitarget'

    include:

        # Check for sphinx doc build warnings.
        # Note: this test is not a perfectly realistic test of ReadTheDocs
        # builds, which operate in a much more bare-bones environment
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='build_sphinx --warning-is-error'

        # Coverage test.  Note that installing the coverage software can
        # change the set of packages installed by conda, so we do
        # separate 'test' and 'test --coverage'.
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test --coverage'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES

        # Standard tests.
       # - os: linux
       #   env: PYTHON_VERSION=2.7 SETUP_CMD='test'
       #        CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
       #        PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES

        # Redundant with the coverage test
        # - os: linux
        #   env: PYTHON_VERSION=3.5 SETUP_CMD='test'
        #        CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
        #        PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES

        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES

        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='test'
               ASTROPY_VERSION=3.0
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
               PIP_DEPENDENCIES=$PIP_ALL_DEPENDENCIES

        # - os: osx
        #   env: PYTHON_VERSION=2.7 SETUP_CMD='test'
        # - python: 3.3
        #   env: SETUP_CMD='test --open-files'
        # - python: 3.4
        #   env: SETUP_CMD='test --open-files'

        # Now try do scipy on 2.7 and an appropriate 3.x build (with latest numpy)
        # We also note the code coverage on Python 2.7.
        # - python: 2.7
        #   env: SETUP_CMD='test --coverage'  OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii
        # - python: 3.4
        #   env: SETUP_CMD='test'  OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii

        # Try older numpy versions
        # - python: 2.7
        #   env: NUMPY_VERSION=1.8 SETUP_CMD='test'
        # - python: 2.7
        #   env: NUMPY_VERSION=1.7 SETUP_CMD='test'
        # - python: 2.7
        #   env: NUMPY_VERSION=1.6 SETUP_CMD='test'

        # PEP 8 compliance.
        - os: linux
          python: 3.5
          env: MAIN_CMD='pycodestyle' SETUP_CMD='--count py/desitarget'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh
    # egg_info causes the astropy/ci-helpers script to exit before the pip
    # packages are installed, thus desiutil is not installed in that script.
    - if [[ $SETUP_CMD == test* ]]; then pip install git+https://github.com/dkirkby/speclite.git@${SPECLITE_VERSION}#egg=speclite; fi
    - "if [[ $SETUP_CMD == test* ]]; then pip install --no-binary :all: healpy; fi"
    - for p in $DESIHUB_PIP_DEPENDENCIES; do r=$(echo $p | cut -d= -f1); v=$(echo $p | cut -d= -f2); pip install git+https://github.com/desihub/${r}.git@${v}#egg=${r}; done
    - export DESIMODEL=${HOME}/desimodel/${DESIMODEL_VERSION}
    - mkdir -p ${DESIMODEL}
    - if [[ $SETUP_CMD == test* ]]; then svn export https://desi.lbl.gov/svn/code/desimodel/${DESIMODEL_DATA}/data ${DESIMODEL}/data ; fi
    - if [[ $SETUP_CMD == test* ]]; then conda list; fi
    - if [[ $SETUP_CMD == test* ]]; then python -c 'import numpy; import scipy; print(numpy.__version__); print(numpy.__path__); print(scipy.__version__); print(scipy.__path__)'; fi
    - if [[ $MAIN_CMD == 'pycodestyle' ]]; then pip install pycodestyle; fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls; fi
