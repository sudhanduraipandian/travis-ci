language: node_js
node_js: 8
os:
  - linux
env:
  global:
    - secure: "EuQQSD9GKeAUtFhNGe/m23IYXKVTr8CPl9f7O/PsVDkDMsO6E15o16hn9rn/kIeMEE9+UsCGapFJYlTg+jvZncr8kNTWkKTxsaYS9ejc9br4ePzJmg4LXrelIsunkUGTRBG7wd5I7g+Tx24k02EItftYhzhw3GV3sDvw7VISts3CaCFrGMwOlI4vuhFxJ7N9XRg3HFPY4O9847R/nfhbN9eMqI1kg9xA2INoYaeqxxjWjCX/YlRNpUjkpauv3Owc9Z+B5DYSAlywTModqiUdkiAGmFptydo8gkCqll+iuFfZAV7KT338gVVP3XLNVP1Bq7ZrcqPimhepStX1smEo7vtPzUSb4Wiy03hXlkhDEhLzOf629bGrwpMDy49oAYN0+7o2JBmtV91VEOOs2+ziDTprdv3l4VyX9em+/tf3KxZqTNuiq2Rbl2607zQ3MVYzvHqedoAJiimzUAqMEC4JZmAhlS4dnLFpG2aZv0vuNS9hzVcmSrwcUUwQXWDuRVJkI2mpvL/avbSSH2+kww+I2Uz6VPIOnWoMlY+PJ1i7nMGLpbRY9D4QY1JGJh897hSTHw3F21/4h7kSrkPG0rIdCTCiJ3sXBfUdeSdBi0E+ca9vUWZBbsfH0NdRcw4n0cYiG0NaV1zNA6EIRi8L1GHLtPtYbu/Gm2HM63d7agIQvR0="
cache:
  directories:
    - "node_modules"
    - "packages/core/node_modules"
    - "packages/desktop/node_modules"
    - "packages/erc20/node_modules"
    - "packages/services/node_modules"
    - "packages/ui/node_modules"

# Need for gitversion
git:
  depth: false

before_install:
  - echo Installing GitVersion...
  - wget https://github.com/GitTools/GitVersion/releases/download/v4.0.0/GitVersion-bin-net40-v4.0.0.zip
  - unzip GitVersion-bin-net40-v4.0.0.zip -d GitVersion
  - echo "#!/bin/bash" > gitversion
  - echo 'mono GitVersion/GitVersion.exe "$@"' >> gitversion
  - chmod 755 gitversion
  - ./gitversion /version
  - echo Janus...
  - curl -sL https://raw.githubusercontent.com/ETCDEVTeam/janus/master/get.sh | bash
  - export PATH=$PATH:$PWD/janusbin

before_script:
  - ./gitversion
  - npm install -g node-gyp license-checker
  - npm install -g codecov yarn lerna
  - lerna bootstrap

script:
  - ./gitversion > packages/desktop/gitversion.json
  - export APP_VERSION_GIT_TAG="$(./gitversion /showvariable FullSemVer)-$(./gitversion /showvariable ShortSha)"
  - echo "Building app version $APP_VERSION_GIT_TAG"
  - if [[ $(license-checker --production --exclude '(GPL-2.0 OR MIT)' | grep GPL) ]]; then license-checker --production | grep -C 1 GPL && false; fi
  - yarn build
  - yarn test:coverage
  - yarn lint
  - env CSC_IDENTITY_AUTO_DISCOVERY=false yarn build:dist
after_success:
  # Show dist directory contents after a successful build.
  - ls -l ./packages/desktop/dist/
before_deploy:
  # Set up GCP
  - openssl aes-256-cbc -k "$GCP_PASSWD" -in gcloud-travis.json.enc -out .gcloud.json -d
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++-4.8
    - build-essential
    - libudev-dev
    - libusb-1.0-0
    - libusb-1.0-0-dev
    - mono-complete
    - libcurl3

deploy:
  - provider: script
    script: ./gcloud-deploy.sh
    skip_cleanup: true
    on:
      branch: master

  - provider: script
    script: ./gcloud-deploy.sh
    skip_cleanup: true
    on:
      tags: true
