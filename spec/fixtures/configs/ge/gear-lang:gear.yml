# Based on https://github.com/Microsoft/GSL/blob/master/.travis.yml
# Travis docs: https://docs.travis-ci.com/user/languages/c/

language: c
notifications:
  email: false

# Use Linux unless specified otherwise
os: linux
dist: trusty

matrix:
  include:

    ##########################################################################
    # Clang on Linux
    ##########################################################################

    # Clang 3.6
    - env: COMPILER=clang-3.6 BUILD_TYPE=Debug
      addons: &clang36
        apt:
          packages: clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

    - env: COMPILER=clang-3.6 BUILD_TYPE=Release
      addons: *clang36

    # Clang 3.7
    - env: COMPILER=clang-3.7 BUILD_TYPE=Debug
      addons: &clang37
        apt:
          packages: clang-3.7
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: COMPILER=clang-3.7 BUILD_TYPE=Release
      addons: *clang37

    # Clang 3.8
    - env: COMPILER=clang-3.8 BUILD_TYPE=Debug
      addons: &clang38
        apt:
          packages: clang-3.8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    - env: COMPILER=clang-3.8 BUILD_TYPE=Release
      addons: *clang38

    # Clang 3.9
    - env: COMPILER=clang-3.9 BUILD_TYPE=Debug
      addons: &clang39
        apt:
          packages: clang-3.9
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    - env: COMPILER=clang-3.9 BUILD_TYPE=Release
      addons: *clang39

    # Clang 4.0
    - env: COMPILER=clang-4.0 BUILD_TYPE=Debug
      addons: &clang40
        apt:
          packages: clang-4.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    - env: COMPILER=clang-4.0 BUILD_TYPE=Release
      addons: *clang40

    # Clang 5.0
    - env: COMPILER=clang-5.0 BUILD_TYPE=Debug
      addons: &clang50
        apt:
          packages: clang-5.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: COMPILER=clang-5.0 BUILD_TYPE=Release
      addons: *clang50    

    ##########################################################################
    # GCC on Linux
    ##########################################################################

    # GCC 4.9
    - env: COMPILER=gcc-4.9 BUILD_TYPE=Debug
      addons: &gcc49
        apt:
          packages: gcc-4.9
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=gcc-4.9 BUILD_TYPE=Release
      addons: *gcc49

    # GCC 5
    - env: COMPILER=gcc-5 BUILD_TYPE=Debug
      addons: &gcc5
        apt:
          packages: gcc-5
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=gcc-5 BUILD_TYPE=Release
      addons: *gcc5

    # GCC 6
    - env: COMPILER=gcc-6 BUILD_TYPE=Debug
      addons: &gcc6
        apt:
          packages: gcc-6
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=gcc-6 BUILD_TYPE=Release
      addons: *gcc6

    # GCC 7
    - env: COMPILER=gcc-7 BUILD_TYPE=Debug
      addons: &gcc7
        apt:
          packages: gcc-7
          sources:
            - ubuntu-toolchain-r-test

    - env: COMPILER=gcc-7 BUILD_TYPE=Release
      addons: *gcc7

install:
  # Set the ${CC} variable properly
  - export CC=${COMPILER}
  - ${CC} --version

  # Travis machines have 2 cores
  - JOBS=2

  # Install dependencies on Linux
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo apt-get update
      sudo apt-get -qq install valgrind
      sudo apt-get -qq install cmake
    fi

script:
  # Begin AutoTools
  - ./autogen.sh
  - ./configure
  - make
  - make check
  - make distcheck
  # End

  # Begin CMake
  - mkdir build && cd build
  -   cmake .. -G "Unix Makefiles"
  -   make
  -   ./test_gear
  -   ./test_gear-cli
  - cd ..
  # End

  # Begin Memory Leak Test
  - cd tests
  -   ./leak_check_tests.sh
  - cd ..
  # End

  # Begin Testing Release
  - mv gear-*.tar.gz gear.tar.gz
  - tar -zxvf gear.tar.gz
  - cd gear-*/
  -   ./configure
  -   make
  -   make check
  -   mkdir build && cd build
  -     cmake .. -G "Unix Makefiles"
  -     make
  -   cd ..
  - cd ..
  # End
