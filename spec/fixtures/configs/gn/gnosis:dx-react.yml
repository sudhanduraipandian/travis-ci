if: (branch = develop) OR (branch = master) OR (type = pull_request) OR (tag IS present)
sudo: required
dist: trusty
language: node_js
before_install:
  - npm install -g truffle@4.1.14 ganache-cli@6.2.3 npm@^6.0.0
  # Needed to deploy pull request and releases
  - sudo apt-get -y install python-pip python-dev
  - pip install awscli --upgrade --user
cache:
  directories:
  - "$HOME/.npm"
install:
  - npm ci --production=false
matrix:
  include:
  - if: branch =~ /^master$/ OR tag IS present
    env: NODE_ENV=production
    node_js: '9'
  - if: NOT (branch =~ /^master$/) AND NOT (tag IS present)
    env: NODE_ENV=development
    node_js: '9'
before_script:
  - truffle compile
  - npm run build:all

script:
  - echo "Skip tests" # no test cases for the project

after_success:
  # Pull Request - Deploy it to a review environment
  # Travis doesn't do deploy step with pull requests builds
  - ./travis/deploy_pull_request.sh
deploy:
  - provider: s3
    bucket: $DEV_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/dev
    on:
      branch: develop
      node: '9'
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/prod
    upload-dir: current
    on:
      branch: master
      node: '9'

  - provider: s3
    bucket: $DEV_LEGACY_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/legacy
    on:
      branch: develop
      node: '9'
  - provider: s3
    bucket: $STAGING_LEGACY_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/legacy
    upload-dir: current
    on:
      branch: master
      node: '9'
  # Prepare legacy production deployment
  - provider: s3
    bucket: $STAGING_LEGACY_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/legacy
    upload-dir: releases/$TRAVIS_TAG
    on:
      tags: true
      node: '9'
  # Prepare production deployment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    local_dir: dist/prod
    upload-dir: releases/$TRAVIS_TAG
    on:
      tags: true
      node: '9'
  - provider: script
    script: bash travis/prepare_production_deployment.sh
    on:
      tags: true
      node: '9'
