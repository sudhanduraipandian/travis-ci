## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
julia:
  - 0.6
  - 0.7
  - 1.0
  - 1.1
  #- nightly
notifications:
  email: false
git:
  depth: 99999999

## allow failures (tests will run but not make your overall status red)
#matrix:
  #allow_failures:
    #- julia: nightly

## uncomment and modify the following lines to manually install system packages
#  apt: # apt-get for linux
#    packages:
#    - gfortran
#before_script: # homebrew for mac
#  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi

## uncomment the following lines to override the default test script
#script:
#  - julia -e 'Pkg.clone(pwd()); Pkg.build("LazySets"); Pkg.test("LazySets"; coverage=true)'
after_success:
  # documentation (restrict Documenter to release version 0.19.7 (breaking release) for now)
  - julia -e 'VERSION >= v"0.7-" && using Pkg;
              VERSION >= v"0.7-" && Pkg.add("Compat");
              VERSION >= v"0.7-" && Pkg.add("IntervalArithmetic");
              VERSION >= v"0.7-" && Pkg.add("RecipesBase");
              Pkg.add("Documenter");
              Pkg.add("Plots");
              Pkg.add("GR");
              Pkg.add("Polyhedra");
              Pkg.add("CDDLib");
              Pkg.add("Optim");
              Pkg.add("StaticArrays");
              Pkg.add("BenchmarkTools");
              v"0.7" <= VERSION < v"1.0-" && Pkg.pin([PackageSpec(name="Documenter", version="0.19.7"), PackageSpec(name="GR", version="0.33.1")]);'
              # pinning must be the last command because otherwise it is ignored
  - julia -e 'if v"0.7" <= VERSION <= v"0.7"
                  using Pkg;
                  cd(Pkg.dir("LazySets"));
                  include(joinpath("docs", "make.jl"))
              end'
              # only build documentation in v0.7
              # - building in v0.6 breaks
              # - building in v1.0 and v1.1 stalls the Travis build since March 2, 2019
  # code coverage (for both Coveralls and Codecov)
  - julia -e 'VERSION >= v"0.7-" && using Pkg; Pkg.add("Coverage")'
  # push coverage results to Coveralls
  #- julia -e 'cd(Pkg.dir("LazySets")); using Coverage; Coveralls.submit(Coveralls.process_folder())'
  # push coverage results to Codecov
  - julia -e 'VERSION >= v"0.7-" && using Pkg; cd(Pkg.dir("LazySets")); using Coverage; Codecov.submit(Codecov.process_folder())'
