language: python
python:
    - "2.7"

cache:
  directories:
    - $HOME/.cache

sudo: required
dist: trusty

compiler:
    - gcc

addons:
  apt:
    packages:
      - libpng12-dev
      - libgdal1-dev
      - pkg-config
      - libnetcdf-dev

before_install:
  # Fix a travis/boto issue.  See
  # https://github.com/travis-ci/travis-ci/issues/7940
  - sudo rm -f /etc/boto.cfg

  - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi

  - export DEPLOY=true

  - GIRDER_BRANCH="2.x-maintenance"
  - DATABASE_ASSETSTORE_VERSION="73651be9d133178dc1a791c7bec8b20071e08664"

  # Install GDAL 2
  - export CPLUS_INCLUDE_PATH=/usr/include/gdal
  - export C_INCLUDE_PATH=/usr/include/gdal
  - sudo add-apt-repository -y ppa:ubuntugis/ppa && sudo apt-get update
  - sudo apt-get install -y gdal-bin libgdal-dev
  - gdal-config --version

  - MAIN_PATH=$TRAVIS_BUILD_DIR
  # Export these for cmake/travis_continuous.cmake
  - export GIRDER_SOURCE_DIR=$HOME/girder
  - export GIRDER_BUILD_DIR=$HOME/girder_build
  - mkdir -p $GIRDER_BUILD_DIR

  - nvm install v6
  - nvm use v6
  - npm install -g npm

  - rm -rf $GIRDER_SOURCE_DIR
  - git clone -b $GIRDER_BRANCH https://github.com/girder/girder.git $GIRDER_SOURCE_DIR
  - CACHE=$HOME/.cache CMAKE_VERSION=3.4.3 CMAKE_SHORT_VERSION=3.4 source $GIRDER_SOURCE_DIR/scripts/install_cmake.sh
  - cmake --version

  - export MONGO_VERSION=3.0.7
  - export PY_COVG="ON"
  - CACHE=$HOME/.cache source $GIRDER_SOURCE_DIR/scripts/install_mongo.sh
  - mkdir /tmp/db
  - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
  - mongod --version

  - pip install --no-cache-dir -U pip virtualenv setuptools

  # install database_assetstore plugin
  - DB_ASSETSTORE_DIR="${GIRDER_SOURCE_DIR}/plugins/database_assetstore"
  - git clone https://github.com/OpenGeoscience/database_assetstore.git "${DB_ASSETSTORE_DIR}" && git -C "${DB_ASSETSTORE_DIR}" checkout $DATABASE_ASSETSTORE_VERSION
  - pip install -r "${DB_ASSETSTORE_DIR}/requirements.txt" -U

  # install large_image plugin
  - GIRDER_LARGE_IMAGE_DIR="${GIRDER_SOURCE_DIR}/plugins/large_image"
  - git clone https://github.com/girder/large_image.git "${GIRDER_LARGE_IMAGE_DIR}"
  - pip install GDAL==2.1.0 celery
  - pip install "${GIRDER_LARGE_IMAGE_DIR}/[mapnik]"

  # install girder worker
  - GIRDER_WORKER_DIR=$HOME/girder_worker
  - git clone https://github.com/girder/girder_worker.git ${GIRDER_WORKER_DIR}
  - pip install -e ${GIRDER_WORKER_DIR}

  # install gaia
  # - GAIA_DIR=$HOME/gaia
  # - git clone https://github.com/OpenDataAnalytics/gaia.git ${GAIA_DIR}
  # - pip install ${GAIA_DIR}

  - npm install -g npm
  - npm install -g npm-install-retry
  - npm --version

install:
  - cd $GIRDER_SOURCE_DIR
  - pip install --no-cache-dir -U -r requirements-dev.txt -e .
  - pip install girder[worker]
  # We need to add --process-dependency-link to install gaia from github rather
  # than pypi
  - pip install --process-dependency-link $MAIN_PATH
  - pip install -r $MAIN_PATH/requirements-dev.txt

  - girder-install plugin --symlink $MAIN_PATH
  # - cp -r $MAIN_PATH $GIRDER_SOURCE_DIR/plugins/
  - cp $GIRDER_SOURCE_DIR/plugins/minerva/server/conf/minerva.dist.cfg $GIRDER_SOURCE_DIR/plugins/minerva/server/conf/minerva.local.cfg

  - npm-install-retry
  - BABEL_ENV=cover NYC_CWD=$MAIN_PATH girder-install web --plugins=minerva,gravatar,jobs,database_assetstore --dev

  # replace girder's ctest config with minerva's
  - cp "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/CTestConfig.cmake" "$GIRDER_SOURCE_DIR/."

script:
  - cd $GIRDER_BUILD_DIR

  - JASMINE_TIMEOUT=15000 ctest -S "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/travis_continuous.cmake" -VV || true
  - if [ -f $GIRDER_BUILD_DIR/test_failed ] ; then false ; fi

after_success:
  - bash <(curl -s https://codecov.io/bash) -R $MAIN_PATH -s $GIRDER_SOURCE_DIR
