language: cpp
git:
  depth: false


matrix:
    include:
        # Linux gcc 5.0 - Python 2.7
        #- os: linux
        #  dist: trusty
        #  compiler: gcc
        #  addons:
        #    apt:
        #      sources: ['ubuntu-toolchain-r-test']
        #      packages: ['g++-5', 'ccache', 'libpython2.7']
        #  env: >
        #    [
        #    CXX_COMPILER=g++-5                        ,
        #    C_COMPILER=gcc-5                          ,
        #    PYTHON_VERSION=2.7                        ,
        #    PYTHON_INCLUDE_DIR=/usr/include/python2.7 ,
        #    PYTHON_LIBRARY=/usr/lib/libpython2.7.so   ,
        #    PYTHON_BINARY=/usr/bin/python2.7          ,
        #    ]


        # Linux gcc 5.0 - Python 3.5
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
              packages: ['g++-5', 'gcc-5', 'ccache', 'python3.5-dev']
          env: >
            [
            CXX_COMPILER=g++-5                         ,
            C_COMPILER=gcc-5                           ,
            PYTHON_VERSION=3.5                         ,
            PYTHON_INCLUDE_DIR=/usr/include/python3.5m ,
            PYTHON_LIBRARY=/usr/lib/libpython3.5m.so   ,
            PYTHON_BINARY=/usr/bin/python3.5           ,
            ]


        # Linux gcc 6 - Python 3.6
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
              packages: ['g++-6', 'gcc-6', 'ccache', 'python3.6-dev']
          env: >
            [
            CXX_COMPILER=g++-6                         ,
            C_COMPILER=gcc-6                           ,
            PYTHON_VERSION=3.6                         ,
            PYTHON_INCLUDE_DIR=/usr/include/python3.6m ,
            PYTHON_LIBRARY=/usr/lib/libpython3.6m.so   ,
            PYTHON_BINARY=/usr/bin/python3.6           ,
            ]


        # Linux gcc 6 - Python 3.7
        - os: linux
          dist: xenial
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', 'deadsnakes']
              packages: ['g++-6', 'gcc-6', 'ccache', 'python3.7', 'python3.7-dev']
          env: >
            [
            CXX_COMPILER=g++-6                         ,
            C_COMPILER=gcc-6                           ,
            PYTHON_VERSION=3.7                         ,
            PYTHON_INCLUDE_DIR=/usr/include/python3.7m ,
            PYTHON_LIBRARY=/usr/lib/libpython3.7m.so   ,
            PYTHON_BINARY=/usr/bin/python3.7           ,
            ]

        # OSX 10.11 - xcode 7.3 - Python 2.7
        #- os: osx
        #  osx_image: xcode7.3
        #  compiler: clang
        #  env: >
        #    [
        #    CXX_COMPILER=clang++ ,
        #    C_COMPILER=clang     ,
        #    PYTHON_VERSION=2.7   ,
        #    ]

        # OSX 10.12 - xcode 8.3 - Python 3.5
        - os: osx
          osx_image: xcode8.3
          compiler: clang
          env: >
            [
            CXX_COMPILER=clang++ ,
            C_COMPILER=clang     ,
            PYTHON_VERSION=3.5   ,
            ]


        # OSX 10.12 - xcode 8.3 - Python 3.6
        - os: osx
          osx_image: xcode8.3
          compiler: clang
          env: >
            [
            CXX_COMPILER=clang++ ,
            C_COMPILER=clang     ,
            PYTHON_VERSION=3.6   ,
            ]


        # OSX 10.12 - xcode 8.3 - Python 3.7
        - os: osx
          osx_image: xcode10.1
          compiler: clang
          env: >
            [
            CXX_COMPILER=clang++ ,
            C_COMPILER=clang     ,
            PYTHON_VERSION=3.7   ,
            ]

#branches:
#  only:
#  - master


notifications:
  email:
    on_success: never
    on_failure: always

sudo: required

cache:
  - apt
  - ccache
  - $HOME/.pyenv
  - build/rang_cpp_color-prefix
  - build/mbed_tls
  - build/libjson-prefix
  - build/easyloggingpp-prefix
  - build/tests/YAMLCPP
  - build/tests/lief-samples
  - build/tests/catch
  - build/api/python/pybind11-prefix

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -q; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install python-setuptools; fi
  - export CC="$C_COMPILER"
  - export CXX="$CXX_COMPILER"
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PREFIX="/usr/local"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install ccache; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi

  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PYTHON_CONFIGURE_OPTS="--enable-shared --enable-unicode=ucs2"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then pyenv root; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then pyenv install --list  ;fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "2.7" ]]; then pyenv install 2.7.12; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.5" ]]; then pyenv install 3.5.0; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.6" ]]; then pyenv install 3.6.0; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.7" ]]; then pyenv install 3.7.0; fi
  #- if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.7" ]]; then ls -alR $(pyenv root)/versions/3.7.0a1; fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "2.7" ]]; then export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/2.7.12/include/python2.7  ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "2.7" ]]; then export PYTHON_LIBRARY=$(pyenv root)/versions/2.7.12/lib/libpython2.7.dylib ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "2.7" ]]; then export PYTHON_BINARY=$(pyenv root)/versions/2.7.12/bin/python2.7           ;fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.5" ]]; then export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/3.5.0/include/python3.5m ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.5" ]]; then export PYTHON_LIBRARY=$(pyenv root)/versions/3.5.0/lib/libpython3.dylib   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.5" ]]; then export PYTHON_BINARY=$(pyenv root)/versions/3.5.0/bin/python3.5           ;fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.6" ]]; then export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/3.6.0/include/python3.6m ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.6" ]]; then export PYTHON_LIBRARY=$(pyenv root)/versions/3.6.0/lib/libpython3.dylib   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.6" ]]; then export PYTHON_BINARY=$(pyenv root)/versions/3.6.0/bin/python3.6           ;fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.7" ]]; then export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/3.7.0/include/python3.7m  ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.7" ]]; then export PYTHON_LIBRARY=$(pyenv root)/versions/3.7.0/lib/libpython3.7m.dylib ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$PYTHON_VERSION" == "3.7" ]]; then export PYTHON_BINARY=$(pyenv root)/versions/3.7.0/bin/python3.7            ;fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then $PYTHON_BINARY -m pip install --upgrade pip        ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then $PYTHON_BINARY -m pip install --upgrade setuptools ;fi

install:
  - if [ "$GCOV" == "ON" ]; then sudo ln -sf /usr/bin/gcov-5 /usr/bin/gcov; fi
  - if [ "$GCOV" == "ON" ]; then wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.13.orig.tar.gz; fi
  - if [ "$GCOV" == "ON" ]; then tar xf lcov_1.13.orig.tar.gz; fi
  - if [ "$GCOV" == "ON" ]; then sudo make -C lcov-1.13/ install; fi

  # Setup CMake 3.1 for Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget --no-check-certificate http://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar -xzf cmake-3.7.2-Linux-x86_64.tar.gz                                                  ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$PWD/cmake-3.7.2-Linux-x86_64/bin:$PATH                                       ;fi

  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py   ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo -H $PYTHON_BINARY ./get-pip.py ;fi

script:
  - export CC=$C_COMPILER
  - export CXX=$CXX_COMPILER

  - sudo $PYTHON_BINARY -m pip install setuptools
  - sudo $PYTHON_BINARY -m pip install wheel
  - sudo $PYTHON_BINARY -m pip install --upgrade setuptools
  - sudo $PYTHON_BINARY -m pip install --upgrade pip
  - $PYTHON_BINARY ./setup.py --lief-test --sdk build -j8 bdist_wheel

after_success:
  - make package
  - sudo $PYTHON_BINARY -m pip install setuptools requests mako
  - sudo $PYTHON_BINARY -m pip install wheel
  - sudo $PYTHON_BINARY -m pip install --upgrade setuptools
  - cd api/python
  - $PYTHON_BINARY setup.py bdist_egg
  - if [[ -z "$TRAVIS_TAG" ]]; then $PYTHON_BINARY setup.py sdist --dev --formats=zip ;fi
  - if [[ -n "$TRAVIS_TAG" ]]; then $PYTHON_BINARY setup.py sdist --formats=zip       ;fi
  - cd $TRAVIS_BUILD_DIR
  - bash ./.github/deploy.sh
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$PYTHON_VERSION" == "3.6" ]]; then $PYTHON_BINARY ./.github/trigger_docker.py ;fi


deploy:
  provider: releases
  api_key:
    - secure: "RlyaagAWt1BrcOBDSpmOnP+/FYUJqQiURlWw7JWvuBBWBDPBta+WI1zZvH6x5H+1bm8F77LrGdU1mRES/MAlhzb8o/VHgOAFhu2si/A+A7Xa9fAIOQw12jcGbtZQUQ7HCkRfa5VGrW4IlMI5+FJ7uFUU2lLoWOsA3u8pLEwApbdiB/LmtEY+kKhXzX0bT3h9cZATDWTeEoopXOseaBmTFC9IUATE3Ht1wVP49wXRUZHNJA10PJILbKtR1OITCAKm0iu1rVdLhoMzqH3T2dXDZ5ykF9TuYQaXJzKMFHaAeSe135JYOiIEWUUiif80q/mTWXiJAQ6gQXXOyDVu6R0Hi03TKsWXPlEKDBpDCRDu58I2hJyxsc5MPbFg8IAjraXkOLIQkIpgBOfV0JYVihikOLTfbCBKO+w9RFwrEVy91YsKCDosEAUa9p5nyRoV+k9Epmr/2atlHY8z7RyycB2fNQv3/NkHX8jZesiUFUwu5SHaZD76mKGELEZlf7LW8XwL4Cwfa2OB2vsKFcN1qyGUmXS57MODVBAUubQY4oTFwFJJUv28s06KA6BfZE4QqAeWoRSslDr9ORLUlsHHoCpZrAAY0uyl8kff/jL8IJMd8qng9bBTLu8hiK0yyQWKkebMvMWXhvAjssXeqWt3OeL2mssbUG5N1pXt6eHFmQvxqzs="
  file_glob: true
  file:
    - ${TRAVIS_BUILD_DIR}/build/api/python/dist/*.egg
    - ${TRAVIS_BUILD_DIR}/build/api/python/dist/*.zip
    - ${TRAVIS_BUILD_DIR}/build/*.tar.gz
  skip_cleanup: true
  on:
    #branch: master
    tags: true

