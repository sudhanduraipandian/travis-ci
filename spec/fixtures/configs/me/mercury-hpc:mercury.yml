language: c

os:
    - linux

compiler:
    - gcc
    - clang

sudo: true
dist: trusty
group: beta

cache:
  directories:
    - $HOME/install

env:
  global:
    - MERCURY_NO_LOOP="true"
  matrix:
    - MERCURY_BUILD_CONFIGURATION="Debug"
    - MERCURY_BUILD_CONFIGURATION="RelWithDebInfo"
    - MERCURY_BUILD_CONFIGURATION="Release"

matrix:
  include:
   - os: linux
     compiler: gcc
     addons:
       apt:
         sources:
         - ubuntu-toolchain-r-test
         packages:
         - gcc-8
         - g++-8
         - libtsan0
         - libasan5
         - liblsan0
     env: MERCURY_MEMORYCHECK_TYPE="ThreadSanitizer"
   - os: linux
     compiler: gcc
     addons:
       apt:
         sources:
         - ubuntu-toolchain-r-test
         packages:
         - gcc-8
         - g++-8
         - libtsan0
         - libasan5
         - liblsan0
     env: MERCURY_MEMORYCHECK_TYPE="AddressSanitizer"
   - os: linux
     compiler: gcc
     addons:
       apt:
         sources:
         - ubuntu-toolchain-r-test
         packages:
         - gcc-8
         - g++-8
     env: MERCURY_DO_COVERAGE="true"

branches:
  only:
    - master

before_install:
    - echo "Existing directories in $HOME" && ls $HOME
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall --force oclint; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" && "$CC" == "gcc" ]]; then brew install gcc; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install libfabric; fi

install:
    - ./Testing/script/travis_build.sh

before_script:
    - if [ -d "$HOME/install/bin" ]; then ls $HOME/install/bin; fi
    - export PATH=$HOME/install/bin:$PATH
    - export LD_LIBRARY_PATH=$HOME/install/lib:$HOME/install/lib64:$LD_LIBRARY_PATH
    - export PKG_CONFIG_PATH=$HOME/install/lib/pkgconfig:$PKG_CONFIG_PATH
    - if [[ "$CC" == "gcc" && `command -v gcc-8` ]]; then export CC=gcc-8; export CXX=g++-8; export AR=gcc-ar-8; export NM=gcc-nm-8; export RANLIB=gcc-ranlib-8; which gcov-8; fi
    - $CC --version
    - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then export MERCURY_DASHBOARD_MODEL="Nightly"; elif [[ "$TRAVIS_EVENT_TYPE" == "pull_request" ]]; then export MERCURY_DASHBOARD_MODEL="Experimental"; else export MERCURY_DASHBOARD_MODEL="Continuous"; fi
    - ctest --version
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cat /proc/sys/kernel/yama/ptrace_scope; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ulimit -a; fi
    - fi_info

script:
    - ctest -VV --output-on-failure -S ./Testing/script/travis_script.cmake

