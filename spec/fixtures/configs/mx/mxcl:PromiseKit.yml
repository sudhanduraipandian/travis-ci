os: osx
language: swift
osx_image: xcode10.2

branches:
  only:
    - /^v7/
    - master
    - v6
    - v4
    - legacy-1.x
    - /^\d+\.\d+\.\d+$/

stages:
  - name: pretest
  - name: lint
  - name: test
  - name: deploy
    if: branch =~ ^\d+\.\d+\.\d+$

xcode_project: PromiseKit.xcodeproj
xcode_scheme: PromiseKit-Package
xcode_destination: 'platform=macOS'

jobs:
  include:
    - stage: pretest
      name: Validate Linux test coverage completeness
      install: swift test --generate-linuxmain
      script: git diff --exit-code

    - &test
      name: macOS
      stage: test
      install: swift package generate-xcodeproj --enable-code-coverage
      after_success: bash <(curl -s https://codecov.io/bash)
    - <<: *test
      name: iOS
      xcode_destination: 'OS=12.2,name=iPhone SE'
    - <<: *test
      name: tvOS
      xcode_destination: 'OS=12.2,name=Apple TV'

    - name: Linux
      env: SWIFT_VERSION='5.0'
      os: linux
      language: generic
      osx_image: null
      install: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script: swift test

    - name: JavaScript Promises/A+
      install: |
        bash -c "
          cd Tests/A+/JavaScript
          npm ci &>/dev/null
          npm run --hide-modules build"
      script: swift test --filter A__js.AllTests
      after_success: bash <(curl -s https://codecov.io/bash)
      cache.directories:
        - Tests/JS-A+/build
        - Tests/JS-A+/node_modules

    - stage: lint
      name: Spell Check Markdown
      install: npm install markdown-spellcheck --global
      before_script: mv .github/spelling-skip-words .spelling
      script: mdspell -r -n -a --en-us *.md **/*.md
      os: linux
      language: generic

    - stage: deploy
      before_install: |
        curl -O https://raw.githubusercontent.com/mxcl/Path.swift/master/.github/deploy
        chmod u+x deploy
      install: brew install mxcl/made/swift-sh
      before_script: ./deploy generate-podspec
      script: pod trunk push --allow-warnings
      after_success: |
        ./deploy publish-release

    - name: Generate Documentation
      git.depth: false
      install: gem install jazzy
      before_script: swift package generate-xcodeproj
      script: |
        set -exo pipefail
        jazzy --config .github/jazzy.yml \
              --github_url "https://github.com/$TRAVIS_REPO_SLUG" \
              --module-version "$TRAVIS_TAG"
        git remote update
        git fetch origin gh-pages:gh-pages --depth 1
        git checkout gh-pages
        rm -rf reference/v7
        mv foo reference/v7
        git add reference/v7
        git config user.name  "Travis"
        git config user.email "jazzy@travis-ci.com"
        git commit -m "Updated docs for v$TRAVIS_TAG"
        git remote add secure-origin https://${GITHUB_TOKEN}@github.com/$TRAVIS_REPO_SLUG.git
        git push secure-origin gh-pages
