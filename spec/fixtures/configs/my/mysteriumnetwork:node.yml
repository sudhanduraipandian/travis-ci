dist: xenial
language: go
go: ["1.11"]

env:
  global:
    - BUILD_COMMIT=$TRAVIS_COMMIT
    - BUILD_BRANCH=$TRAVIS_BRANCH
    - BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
    - BUILD_VERSION=$TRAVIS_TAG

before_install:
  - if [ -z "$BUILD_VERSION" ]; then
      export BUILD_VERSION=$(
        curl -s -H "Authorization:token $GIT_RELEASES_API_KEY"
        https://api.github.com/repos/${TRAVIS_REPO_SLUG}/releases |
        jq -r '( first(.[]  | select(.prerelease == true)) ) | .tag_name');
    fi

after_failure:
  - bin/s3 rb --force s3://travis-$TRAVIS_BUILD_NUMBER

cache:
  directories:
    - vendor

stages:
  - pre-init
  - test
  - name: build
    if: (type != pull_request AND branch = master AND tag IS blank) OR tag IS present
  - name: release-dev
    if: type != pull_request AND branch = master AND tag IS blank
  - name: release
    if: tag IS present
  - name: cleanup
    if: (type != pull_request AND branch = master AND tag IS blank) OR tag IS present

jobs:
  include:
    # Dependencies cache stage and S3 bucket init
    - stage: pre-init
      name: "Vendor update"
      script:
        - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        - dep ensure
    - script: bin/s3 mb s3://travis-$TRAVIS_BUILD_NUMBER
      name: "Creating S3 bucket"
      if: (type != pull_request AND branch = master AND tag IS blank) OR tag IS present

    # Test stage
    - stage: test
      script: bin/test
      name: "Unit tests"

    - script:
      - bin/package_ios amd64
      name: "iOS packages"
      if: type = pull_request

    - script:
      - bin/package_android amd64
      name: "Android packages"
      if: type = pull_request

    - script: bin/test_e2e
      name: "End-to-end tests"
      if: type = pull_request

    - script: bin/builder_run bin/check_golint
      name: "golint check"

    - script: bin/builder_run bin/check_goimports
      name: "goimports check"

    - script: bin/check_license
      name: "license check"

    - script: bin/check_govet
      name: "govet check"

    - script:
      - go get github.com/go-swagger/go-swagger/cmd/swagger/
      - bin/check_swagger
      name: "swagger check"

    # Build artifacts
    - stage: build
      script:
      - BINARY=build/myst/myst_linux_amd64 bin/package_standalone linux
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "Linux packages"

    - script:
      - bin/builder_run BINARY=build/myst/myst bin/package_debian $BUILD_VERSION amd64
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "DEB packages"

    - script:
      - BINARY=build/myst/myst_darwin_amd64 bin/package_standalone darwin
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "OSX packages"

    - script:
      - BINARY=build/myst/myst_windows_amd64.exe bin/package_standalone windows
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "Windows packages"

    - script:
      - bin/package_ios amd64
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "iOS packages"

    - script:
      - bin/package_android amd64
      - bin/s3 sync build/package s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts
      name: "Android packages"

    - script:
      - bin/package_docker
      - docker save myst:alpine | gzip > myst_alpine.tgz
      - bin/s3 cp myst_alpine.tgz s3://travis-$TRAVIS_BUILD_NUMBER/docker-images/
      name: "Alpine docker image"

    - script:
      - bin/package_docker_ubuntu $BUILD_VERSION
      - docker save myst:ubuntu | gzip > myst_ubuntu.tgz
      - bin/s3 cp myst_ubuntu.tgz s3://travis-$TRAVIS_BUILD_NUMBER/docker-images/
      name: "Ubuntu docker image"

    - script:
      - go get github.com/go-swagger/go-swagger/cmd/swagger/
      - bin/swagger_generate
      - bin/s3 cp tequilapi.json s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts/
      - bin/package_docker_docs
      - docker save tequilapi:${BUILD_VERSION} | gzip > tequilapi_redoc.tgz
      - bin/s3 cp tequilapi_redoc.tgz s3://travis-$TRAVIS_BUILD_NUMBER/docker-images/
      name: "Swagger docs redoc docker image"

    # Development bleeding-edge release (on master commits only)
    - stage: release-dev
      script:
        - git tag -f $BUILD_VERSION
        - git remote add gh https://${TRAVIS_REPO_SLUG%/*}:${GIT_RELEASES_API_KEY}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push -f gh $BUILD_VERSION
      name: "Push dev git tag"

    - script:
      - bin/release_goreport
      name: "Update Go Report Card"

    # Official release (on tags only)
    - stage: release
      script: bin/s3 sync s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts build/package
      name: "Official release (on tags only)"
      deploy:
        provider: releases
        file_glob: true
        file: build/package/*
        skip_cleanup: true
        overwrite: true
        api_key: "$GIT_RELEASES_API_KEY"
        on:
          tags: true
    - script:
      - bin/s3 sync s3://travis-$TRAVIS_BUILD_NUMBER/docker-images build/docker
      - docker load -i build/docker/myst_alpine.tgz
      - docker load -i build/docker/myst_ubuntu.tgz
      - docker load -i build/docker/tequilapi_redoc.tgz
      - bin/release_docker $TRAVIS_TAG
      - if [[ $TRAVIS_TAG != *-rc* ]] && [[ $TRAVIS_TAG != *-dev ]]; then bin/release_docker latest; fi
      name: "Pushing release to hub.docker.com"
    - script:
      - bin/s3 sync s3://travis-$TRAVIS_BUILD_NUMBER/build-artifacts build/package
      - openssl aes-256-cbc -K $encrypted_2698a83519b3_key -iv $encrypted_2698a83519b3_iv -in bin/package/android/key.gpg.enc -out bin/package/android/key.gpg -d
      - gpg --import bin/package/android/key.gpg
      - gpg --list-keys
      - bin/release_android "$TRAVIS_TAG"
      name: "Publish Android SDK to the Sonatype and Maven Central"

    - stage: cleanup
      script:
        - bin/s3 rb --force s3://travis-$TRAVIS_BUILD_NUMBER
      name: "Cleaning up S3 bucket"

notifications:
  slack:
    rooms:
      - secure: >
          uzg7QbKd09rm6q/7iXk1HFfXo61vqFbENueRM/a6Jg+o2/YZEQXtKLO+gLg2gY/4ok9P4goUF8PuAA1/YLnhzJAr0ks35z69kns36E2eJkU2kB72D8
          K44Mi5fhPFrcbbkPPqFtMoeXUkEjNvB6LT3w0xpWOUBS68N/HJrpi2Y3kn1tp96tcsneLyBick3JrlJc3aptHq/bNFLaWFS9orzcp9wWDjxNeWaVze
          GM0Y1GCFQymff9UOf2r6Vy/MjESo9QjHH+gJbEzH13d6YcBi2ktZF3c6ZDqsjOOQZKQzwrgYk6sVLQsikDtA0vPgXVVyTVgcYmdTrNF6K/31Dt/e3K
          gJXvpwn6tsW6o2DJJpq4MXFOm2z+S20KNbhSj5BLzYmVOKnJhyDAFFYWLDfF0ZJs3D0Pezjtu8HsMvkX3REYXUaBEZuRR4GRV4iqCdyHWKR+WGtX7Y
          FfsaolqNiWAqHaACH5jL2oZ4DcwF3x0LfEpESJYJrmmUsCl0/siBe9e5zL3mpwdJ7vG2rH8XUsEJvHf5A8YSYOSLE06lPpioNjskKoGYT0/c8VNAty
          OvkdfTsWhz6oCOAZyJsQPuW1vEkjdK/mkrj38g0K4RnMQ05aVbLlHkH+1OUzzPl/NVydoDYdTlkCYTDSL3vrD/Uh5uu57FDssUkz/joiuzixNkePo=
    on_success: change
    on_failure: always
