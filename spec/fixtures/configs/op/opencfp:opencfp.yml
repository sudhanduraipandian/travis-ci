
sudo: false

env:
  global:
    - TRAVIS_DB=cfp_test

# cache composer downloads so installing is quicker
cache:
  yarn: true
  directories:
    - $HOME/.composer/cache

stages:
  - style
  - test
  - asset

jobs:
  include:
    - stage: Style

      language: php

      php: 7.1

      before_install:
        - phpenv config-rm xdebug.ini
        - composer validate --no-check-publish

      install:
        - composer install

      script:
        - composer normalize --dry-run
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then COMMIT_RANGE=$TRAVIS_COMMIT_RANGE; else COMMIT_RANGE="HEAD~..HEAD"; fi;
        - CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRTUXB "${COMMIT_RANGE}")
        - if ! echo "${CHANGED_FILES}" | grep -qE "^(\\.php_cs(\\.dist)?|composer\\.lock)$"; then IFS=$'\n' EXTRA_ARGS=('--path-mode=intersection' '--' ${CHANGED_FILES[@]}); fi
        - vendor/bin/php-cs-fixer fix --config=.php_cs.dist --dry-run --diff -v --using-cache=no "${EXTRA_ARGS[@]}"
        - vendor/bin/phpstan analyze

    - &TEST

      stage: Test

      language: php

      php: 7.1

      before_install:
        - source .travis/xdebug.sh
        - xdebug-disable
        - composer validate --no-check-publish

      install:
        - composer install

      before_script:
        - sh .travis/setup-mail.sh
        - mysql -e "CREATE DATABASE $TRAVIS_DB" -uroot
        - cp config/testing.yml.dist config/testing.yml
        - CFP_ENV=testing vendor/bin/phinx migrate --environment testing
        - mysqldump -uroot $TRAVIS_DB > tests/dump.sql

      script:
        - vendor/bin/phpunit --testsuite auto-review
        - vendor/bin/phpunit --testsuite integration
        - if [[ "$WITH_COVERAGE" == "true" ]]; then xdebug-enable; fi
        - if [[ "$WITH_COVERAGE" == "true" ]]; then vendor/bin/phpunit --testsuite unit --coverage-clover build/logs/clover.xml; else vendor/bin/phpunit --testsuite unit; fi
        - if [[ "$WITH_COVERAGE" == "true" ]]; then xdebug-disable; fi

    - <<: *TEST

      php: 7.2

      env:
        - WITH_COVERAGE=true

    - stage: Asset

      language: node_js

      node_js: 8.8.1

      install:
        - yarn install

      script:
        - yarn run production
