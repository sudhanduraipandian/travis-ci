language: python

python:
    - 3.6
    - 3.7

branches:
  only:
    - master
    - devel
    - /devel-.*/
    - /travis.*/


install:
  - if [ "x$COVERALLS_REPO_TOKEN" != "x" ]; then pip install coveralls; fi
  - pip install git+https://github.com/benureau/leabra.git@master
  - pip install -e .[dev]

os: linux

dist: xenial

env: PYTHONWARNINGS="ignore::DeprecationWarning"

# Cache installed python packages
cache:
  pip

matrix:
  include:
  - os: osx
    python: 3.6
    language: minimal
    env:
        - PYTHON=3.6.8
    # Cache installed python virtual env and homebrew downloads
    cache:
        directories:
          - $HOME/Library/Caches

  - os: osx
    python: 3.7
    language: minimal
    env:
        - PYTHON=3.7.2
        - PYTHONWARNINGS="ignore::DeprecationWarning"
    # Cache installed python virtual env and homebrew downloads
    cache:
        directories:
          - $HOME/Library/Caches

addons:
  apt:
    packages:
      - graphviz

before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    FILE=python-$PYTHON-macosx10.9.pkg
    if [ ! -f $HOME/Library/Caches/$FILE ]; then
      curl -#  https://www.python.org/ftp/python/$PYTHON/$FILE -o $HOME/Library/Caches/$FILE
    fi
    sudo installer -pkg $HOME/Library/Caches/$FILE -target /
    python3 --version

    echo "Deploying new python venv"
    python3 -m pip --version

    # This sidesteps TLSv1.1 issue when using pip
    curl https://bootstrap.pypa.io/get-pip.py | python3
    python3 -m pip  install virtualenv
    python3 -m venv $HOME/venv
    source $HOME/venv/bin/activate
    python --version
    # virtualenv installs default pip even if we updated it above.
    # update it again.
    curl https://bootstrap.pypa.io/get-pip.py | python

    # setuptools also face the same TLS deprecation issue.
    # Update them explicitly
    python -m pip install -U setuptools setuptools-git setuptools-scm

    HOMEBREW_NO_AUTO_UPDATE=1 brew install graphviz
  fi
  if [ "x$COVERALLS_REPO_TOKEN" != "x" ]; then
        export PYTEST_COV="--cov=psyneulink"
  else
        export PYTEST_COV=""
  fi


script:
  - python -m pytest -p no:logging $PYTEST_COV tests/

after_script:
  - if [ "x$COVERALLS_REPO_TOKEN" != "x" ]; then coveralls; fi
