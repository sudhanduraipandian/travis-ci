sudo: required
cache: apt
language: cpp

matrix:
  include:
    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
          - g++-5
          - pandoc
    - os: linux
      dist: xenial
      env: CXX_COMPILER=g++-6
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6
          - pandoc
    - os: linux
      dist: xenial
      env: CXX_COMPILER=g++-7
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
          - pandoc
    - os: linux
      dist: xenial
      env: CXX_COMPILER=g++-8
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - pandoc
    - os: linux
      dist: xenial
      compiler: clang++
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-8
          - pandoc
    - os: osx
      osx_image: xcode8.3
      env: PYTHON=3.5.1
# xcode9.4 times out a lot
#    - os: osx
#      osx_image: xcode9.4
# xcode 10 also times out a lot
#  - os: osx
#      osx_image: xcode10.1
      
before_install:
  # We need to re-export CC and CXX here, because travis exports CXX=g++ or clang++ AFTER we set CXX.
  - if [ -n "${C_COMPILER}" ]; then export CC="${C_COMPILER}"; fi
  - if [ -n "${CXX_COMPILER}" ]; then export CXX="${CXX_COMPILER}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update && brew upgrade python; fi

script:
# Build
  - cd projects/cmake
  - ./build.sh
# Run tests
  - cd ../..
  - echo "\"Hello World\"" | projects/cmake/rb
  - cd tests
  - ./run_integration_tests.sh
# Run testiphy
  - export PATH=${TRAVIS_BUILD_DIR}/projects/cmake:$PATH
  - cd
  - git clone https://gitlab.com/testiphy/testiphy.git
  - cd testiphy
  - ./testiphy rb

# notifications
notifications:
  slack: revbayes:bQO6VTun0Orhx2NiKktVPDsS
