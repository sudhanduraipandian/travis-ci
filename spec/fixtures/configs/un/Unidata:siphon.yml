# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python
sudo: false

addons:
  artifacts:
    target_paths: /
    paths:
      - $(find $WHEELDIR -newer $WHEELDIR/download_marker -name *.whl | tr [:space:] :)
  apt:
    packages:
    - libhdf5-serial-dev
    - libnetcdf-dev

python:
  - 3.6
  - 2.7

cache:
  - pip
  - directories:
    - $HOME/local

env:
  global:
    - secure: "mFy/PJrAVKh9Uje1+R8cEOjY8/MDj/qqjn0+FqXCTZPmBMu7RLxTfASMB8QcHfDrJDhH3lEUqkt/uAbGsOKsDIWn/pjKqm6qyvsdw2ISoARommD5lOL3A3Q/Mti1Hz1u4J8CKa0zaGj88NmIyJ2zC8ZyrCl6qS6bTNv7E6A1AIs="
    - WHEELHOUSE="https://unidata-python.s3.amazonaws.com/wheelhouse/index.html"
    - WHEELDIR="wheelhouse/"
    - EXTRAS="test"
    - GH_PAGES_DIR="$HOME/gh-pages"
  matrix:
    - TASK="coverage"
    - TASK="docs"

matrix:
  include:
    - python: 3.5
      env:
    - python: "3.6-dev"
      env: PRE="--pre"
    - python: nightly
      env: PRE="--pre"
  allow_failures:
    - python: "3.6-dev"
    - python: nightly

before_install:
  # Shapely dependency needed to keep from using Shapely's manylinux wheels
  # which use a different geos that what we build cartopy with on Travis
  - pip install --upgrade pip;
  - pip install --upgrade setuptools;
  - if [[ $TASK == "docs" ]]; then
      if ! git describe --tags; then git fetch --depth=150; fi;
      export EXTRAS="doc,examples,netcdf";
      export EXTRA_PACKAGES="Cython pillow sphinx_rtd_theme==0.2.5b1.post1 shapely<1.5.17.post1";
      ls $HOME/local/lib/;
      if [[ ! -f $HOME/local/lib/libproj.so ]]; then
        wget http://download.osgeo.org/proj/proj-4.9.3.tar.gz;
        tar xf proj-4.9.3.tar.gz;
        pushd proj-4.9.3;
        ./configure --prefix=$HOME/local;
        make;
        sed -i "" -e s/-I// proj.pc;
        make install;
        popd;
      fi;
      export PKG_CONFIG_PATH="$HOME/local/lib/pkgconfig";
      export LD_LIBRARY_PATH="$HOME/local/lib";
      pkg-config --modversion proj;
      pip install git+http://github.com/sphinx-gallery/sphinx-gallery;
    else
      export TEST_OPTS="--flake8";
      if [[ $TASK == "coverage" ]]; then
        export TEST_OPTS="$TEST_OPTS --cov=siphon";
        pip install pytest-cov;
      fi;
    fi;
  - mkdir $WHEELDIR;
  - pip download -d $WHEELDIR ".[$EXTRAS]" $EXTRA_PACKAGES -f $WHEELHOUSE $PRE $VERSIONS;
  - touch $WHEELDIR/download_marker && ls -lrt $WHEELDIR;
  - if [[ $EXTRA_PACKAGES != "" ]]; then
      travis_wait pip wheel -w $WHEELDIR $EXTRA_PACKAGES -f $WHEELHOUSE $PRE $VERSIONS;
      pip install $EXTRA_PACKAGES --upgrade --upgrade-strategy=eager --no-index -f file://$PWD/$WHEELDIR $VERSIONS;
    fi;
  - travis_wait pip wheel -w $WHEELDIR ".[$EXTRAS]" $EXTRA_PACKAGES -f $WHEELHOUSE $PRE $VERSIONS;
  - rm -f $WHEELDIR/siphon*.whl;

install:
  - pip install ".[$EXTRAS]" --upgrade --upgrade-strategy=eager --no-index $PRE -f file://$PWD/$WHEELDIR $VERSIONS;

script:
  - if [[ $TASK == "docs" ]]; then
      doc8 README.rst docs;
      export DOC8_RESULT=$?;
      pushd docs;
      make clean html linkcheck;
      export DOC_BUILD_RESULT=$?;
      popd;
      if [[ $DOC_BUILD_RESULT -ne 0 || $DOC8_RESULT -ne 0 ]]; then
        false;
      fi;
    else
      flake8 --version;
      python setup.py test --addopts "-s $TEST_OPTS --no-print-logs";
    fi

after_script:
  - if [[ $TASK == "coverage" ]]; then
      pip install codecov codacy-coverage;
      codecov -e TRAVIS_PYTHON_VERSION;
      coverage xml;
      python-codacy-coverage -r coverage.xml;
    fi

before_deploy:
  - if [[ $TASK == "docs" ]]; then
      rm -f docs/build/html/_static/jquery-*.js;
      rm -f docs/build/html/_static/underscore-*.js;
      rm -f docs/build/html/.buildinfo;
    fi

deploy:
  - provider: pypi
    user: dopplershift
    password:
      secure: RQNuBqUGZHgE7Ux9ud93i8IHiAtjy8mibkYoCbYrY4yhobnMT6cJED33jWyEyVHdQ0GIeAl1PQ7NVl4K9OG0L/KADfVLxEqEBoTu6m2Za5ywBDJChyD3N1XlZT/ix7jEIImrjyfcNLahhH8JLpFrBtIllO7JsMgUo3RtzHwBysg=
    distributions: sdist bdist_wheel
    upload_docs: no
    on:
      repo: Unidata/siphon
      python: 3.6
      condition: '$TASK == "coverage"'
      tags: true
  - provider: script
    script: ci/deploy_docs.sh
    skip_cleanup: true
    on:
      all_branches: true
      python: 3.6
      condition: '$TASK == "docs"'
