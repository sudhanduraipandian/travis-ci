# For more information about the configurations used
# in this file, please see the Travis CI documentation.
#
# https://docs.travis-ci.com

addons:
  chrome: stable

env:
  global:

    # GITHUB_API_TOKEN
    - secure: "JR33kTopJFpEwCnFoh6UGgYYBiU480vltMfui3BRpz8G3zc75KctlChOq1lnzZXLm7Yx+7fx+zEOSoffOL2UrW5RnjfZeoWXb1M8IPfQGF7+AVkTm5fI+O7Z2v/Rq40zEDqT8J4Y5G/k+x3Wvsx6bywAKAUU6PO1zbdnZgKBblR63dDgmHWyrdwatpFQK7VF1DtTXtt+j7P4FiBXN2z2FB/6Uidboqf3DNIBH1wmhZXRFLeBpBubLcJR2FdPbzIE/OaU0iJ0kL4Zm0BecoEX4gfKmgZBtuE3Zr83O0UCXj8XkPWDA/m1I3QJB5BNl3pzv+PkmXxI05ioza5JeM5FmHc6I4X3X6x1GHpppXVZkxwe8WYCtgyfKWFcTy9YC2CV+7t0B0dj1ClzV+RS7q4wWdNKc020bzPle4A0u8FaqK4+IE7s9ciC2qr8r3hIkqgX2a4cDKD57V+fiLZG7BHdYLACmzTLx7rRpAnwhuUW9GUcxG0kb8fVgUZjaM/CI0rrf7kHut2gEDzeOpP9I8d13Oj+Ji1+TDZw8sxEopko5pxaoH8LmCnDn4GfA2b8vOMzJnrF2mcbumTwXLUzC8DNZZb8V/b00TZgCxkaeITDzPM9PpLcKNH4C2wTecc6O9vMRsWpEeirK8NaMpdE4GoSh1F2n+j4c0rxnCVM0ijidzk="

    # TRAVIS_API_TOKEN
    - secure: "IaW1CfeF12i16seRoO3tPQXw0IrF3ve/umcRpwCkmVgaxM0z/q5mJ+VCV25R67idqaGiSfVkdR5qb1q3q8eVKcMBhg/o6s4/7j3GGdm/5ixU5r8TOOfNUadsX2/e/pt4s5YE6+9NgSWshkwk81j9VBmmfQ1ClE0N0xS9uvjzn4YsZ7YSacrM02lEd5riPkVe0slxN0j0eGm50aum75MsPShM1WTGq9WdJyxd/Xpaia+2eBuiRCHu822dASLnoeVL6kyBmE4x86Ss17eR2VseaOS3XKRmFkdIDiPVO85B2EBaeqiyr4fHOqXTQm/WmWGCMSuzpQMRdksSNOCVrN/csmgajnhdye9f2kUdxTduu17TBcYzvkkoP2MRLglINcSCDHspDbI5177oIIBlE6nB9iawUWIIaiRATAmCBpllIGSA/zmvuztQM8YedjHA9E9o0yBXgyaFCHqz9N5fiZldKLU7do2OblPhwQoKzbUhs7+egpuVTnYp76NiqqipRV8gyCDjXCNWtXR/yba3UT5/3PIozL29mxxM41WIuhVhSXgVKhOzDSTYO5z8kB4S8L5dhVY9gLgXi0qnFU4d+Gsiy69lbZ9zXeK0occjMi/b0rkSOwovGmAZU2ArwUh7XRPbFZuCwxwaF/HBqaInsodRveuuOw7RbZh978kQKDf5J9g="

    # GH_USER_NAME & GH_USER_EMAIL
    - secure: "Woi9tmhZmvZ3vabbqeOZj/Pn56fcMMD3kbPd/Imu9cI75OWcasisUIMmQDGL4rPoKsnwQTOTewI83zybXNKRGEpmfZpvwuvl0CbL6Dk8jpPFY8RMGe5xkKTHCvZZCVdNvRRP6ylpn4WdUJkixCHtdYcFcKMaVufbur5fGTdNiu8FUEi5zzJFvy1D8DCV8qI5JAyKWiokRACtPaQ3C5Fj0oQGt+x5rbTLaesu+iTr3+2IwEruzlU+TbJQaMJAWGSb94LSqKVRX5v2buODI2zaY5Q9CaY5doSHT+k33xe+BsZW6J1A4WXoAWXxk5wklg6pQj9Zfq3HOSOr9QI08KC2/7joaXVKrHSo8ITKbpRl/AFCGxTfvfZM7b3AlfmikcWh2PfvvXktwbb2X5Gx5zmGGoIbt3v5IAsXNepRPz3tGsCaNz9x7WWiRpRznW9t1m342Q8gIiz6TfiXd/cWEsTck0kIXtuG2se9V5RLrmD2Ry10+Av1U88vvtfBXlPbA1fnnHbcjrtCcpC4qk1FzhclH/CR+qhhASUmW8D7jWJkpKVQZu6u2GG/HQj4WDUlq7R1zIpKlbSTd+MBDo+6nXle7Y2gqCfP63ij5l1PnRCLp0Q+scBMDz6RNsyq+2tV+I/0zLlrRzglGFkAp3yrrjfilwWm3u6mKf7iQPTTdRIGxs0="

    # Other
    - PACKAGE_BATCH_SIZE=2

  matrix:

    - PACKAGE_BATCH_NUMBER=1
    - PACKAGE_BATCH_NUMBER=2

group: travis_latest

before_install:
  - |

      # Only install the bare minimum of dependencies in order
      # to run the test script.

      npm i && \

      # Run the test script without actually running the tests.
      #
      # This will make the test script create a special file
      # that will be used to optimize other steps to (e.g.:
      # install, scripts) to not do anything if no tests need
      # to be run.
      #
      # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      #
      # This workaround is used because Travis evaluates things
      # too late and there is no way to use a function to conditionally
      # prevent Travis from starting a job.
      #
      # From https://docs.travis-ci.com/user/conditions-v1#Integration:
      #
      #  "Also, environment variables from your build configuration
      #   (.travis.yml) and repository settings are available, and
      #   can be matched using env(FOO), see below.
      #
      #   Note that this means conditions do not have access to the
      #   build environment, and they are not evaluated in Bash.
      #   Bash variables or subprocesses can not be evaluated. "

        npm run test -- --batch-size $PACKAGE_BATCH_SIZE \
                        --batch-number $PACKAGE_BATCH_NUMBER \
                        --run-tests false

install:
  - |

      # Only install the dependencies if the test script created
      # the special file. Otherwise, don't start the normal (time
      # consuming) install process as the job will not have to run
      # any actual tests.
      #
      # (For more information see: `before_install` step)

      if [ -f '.ci-run-tests' ]; then

        # Update to the latest version of `yarn` before using it
        # as older versions have known issues affecting the build.
        #
        # https://github.com/yarnpkg/yarn/issues/5089

        rm -rf node_modules && \
          curl -o- -L https://yarnpkg.com/install.sh | bash && \
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH" && \
          yarn
      fi

jobs:
  include:

    # Stage used for checking for broken links.
    #
    # [!] Runs: Only if the build was triggered by a cron job
    #           (which is automatically run once per week).

    - stage: check-links
      if: |
        branch = master and \
        type = cron

      node_js: lts/*
      os: linux

      script: ./.travis/check-links.sh

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Stage used for deploying different things (e.g.: trigger and
    # deploy a site update).
    #
    # [!] Runs: Only if the build was was triggered because a push
    #           to the `master` branch.

    # - stage: deploy
    #   if: |
    #     branch = master and \
    #     type = push

    #   node_js: lts/*
    #   os: linux

    #   script: ./.travis/trigger-site-update.sh

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Stage used for automatically merging Greenkeeper's commits
    # that pass the tests.
    #
    # [!] Runs: Only for branches created by Greenkeeper.

    - stage: greenkeeper-merge
      if: |
        branch =~ ^greenkeeper\/.*-.*$ and \
        type = push

      node_js: lts/*
      os: linux

      script:
      - ./.travis/set-up-ssh.sh && node ./.travis/greenkeeper-merge.js

language: node_js

node_js:
  - 8
  - 10
  - 11

notifications:
  email:
    on_failure: always
    on_success: never

os:
  - linux
  - osx

osx_image:
  - xcode10.1

script:
  - |

      # Only run the tests if the test script created the
      # special file. Otherwise, don't start the normal
      # (time consuming) test process as the job will not
      # have to run any actual tests.
      #
      # (For more information see: `before_install` step)

      if [ -f '.ci-run-tests' ]; then
        yarn test --batch-size $PACKAGE_BATCH_SIZE \
                  --batch-number $PACKAGE_BATCH_NUMBER
      fi

stages:
  - check-links
  - name: test
    if: type != cron
  - deploy

sudo: required
